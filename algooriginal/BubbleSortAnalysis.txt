In the bubble sort, as elements are sorted they gradually "bubble" (or rise) to their proper location in the array, like bubbles rising in a glass of soda. 
The bubble sort repeatedly compares adjacent elements of an array. The first and second elements are compared and swapped if out of order.  
Then the second and third elements are compared and swapped if out of order.  
This sorting process continues until the last two elements of the array are compared and swapped if out of order.
When this first pass through the array is complete, the bubble sort returns to elements one and two and starts the process all over again. 
So, when does it stop? 
The bubble sort knows that it is finished when it examines the entire array and no "swaps" are needed (thus the list is in proper order).  
The bubble sort keeps track of the occurring swaps by the use of a flag. 
The table below follows an array of numbers before, during, and after a bubble sort for descending order. 
A "pass" is defined as one full trip through the array comparing and if necessary, swapping, adjacent elements.  
Several passes have to be made through the array before it is finally sorted.  
 

